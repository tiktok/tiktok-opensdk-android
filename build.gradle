// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.0'
    ext.gradle_version = '4.1.0'

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'digital.wup:android-maven-publish:3.6.2'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:3.1.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("org.jlleitschuh.gradle.ktlint") version "10.2.1"
}

ext {
    buildToolsVersion = "30.0.3"
    compileSdkVersion = 33

    // androidx
    androidxActivityVersion = '1.5.0'
    androidxCoreVersion = '1.7.0'
    androidxLifecycleVersion = '2.5.1'
    androidxConstraintlayoutVersion = '2.1.4'
    androidxAppcompatVersion = '1.4.0'
    androidxAnnotation = '1.4.0'
    androidxBrowser = '1.3.0'

    materialVersion = '1.6.1'
    coroutineCoreVersion = '1.6.1'

    // third party
    gson = '2.9.1'
    retrofit = '2.7.0'
    okhttp = '4.10.0'
    loggingInterceptor = '3.12.1'

    androidTestVersion = '1.4.0'
    androidTestJunitVersion = '1.1.3'
    junitVersion = '4.13.2'
    mockk = '1.12.5'
    espressoVersion = '3.4.0'

    // playstore
    playStoreBase = '18.2.0'
    playStoreIdentifier = '18.0.1'

    groupName = ARTIFACT_GROUP
}

allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    apply plugin: "org.jlleitschuh.gradle.ktlint"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode(0777)
}

tasks.getByPath(':demo-auth:preBuild').dependsOn(installGitHook)
tasks.getByPath(':demo-share:preBuild').dependsOn(installGitHook)